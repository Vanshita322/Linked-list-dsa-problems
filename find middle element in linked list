#include<iostream>
using namespace std;
struct Node {
    int data;
    Node * next;
    Node(int val) {
        data = val;
        next = NULL;
    }
};
    Node* find_middle(Node* head) {
        if(head == NULL) {
            return NULL;
        }
        Node* slow = head;
        Node* fast = head;
        while(fast!=NULL && fast->next!=NULL) {
            slow = slow->next;
            fast = fast->next->next;
        }
        return slow;
    }
int main() {
    int n;
    cout << "Enter number of nodes: ";
    cin >> n;

    Node* head = NULL;
    Node* tail = NULL;

    for (int i = 0; i < n; i++) {
        int val;
        cin >> val;

        Node* newNode = new Node(val);

        if (head == NULL) {
            head = newNode;   // first node
            tail = newNode;
        } else {
            tail->next = newNode;  // link new node
            tail = newNode;        // move tail ahead
        }
    }
        Node* mid = find_middle(head);
        if(mid!=NULL) {
            cout<<"Middle Element : "<<mid->data;
        }
        else {
            cout<<"List is empty";
        }
        return 0;
    }
